version: '3.2'
services:
  pajbot_web:
    build:
      context: .
      dockerfile: configuration/PajbotDockerfile
    ports:
      - "7070:2325" # Forward container port 2325 to host port 7070
    volumes:
      - /opt/pajbots/:/opt/www/configs # /opt/pajbots/ is the host folder, /opt/www/configs is the folder in the container
      - sockets:/srv/pajbot # Remember the sockets should be unique between bot and web, unless multiple bots/web should share
    depends_on:
      - postgres
      - redis
    command: ["python3", "app.py", "--config", "configs/config.ini"]

  pajbot_bot:
    build:
      context: .
      dockerfile: configuration/PajbotDockerfile
    restart: unless-stopped # Enabled auto restart, since the bot is gonna crash until redis has token
    volumes:
      - /opt/pajbots/:/opt/www/configs # /opt/pajbots/ is the host folder, /opt/www/configs is the folder in the container
      - sockets:/srv/pajbot # Remember the sockets should be unique between bot and web, unless multiple bots/web should share
    depends_on:
      - postgres
      - redis
    command: ["python3", "main.py", "--config", "configs/config.ini"]

  redis:
    image: redis:latest
    restart: always
    volumes:
      - redis:/data
    command: ["redis-server", "--appendonly", "yes"]

  postgres:
    build:
      context: .
      dockerfile: configuration/PostgresDockerfile
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=db1,db2
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=omegalul

volumes:
  sockets:
    driver: local
  postgres:
    driver: local
  redis:
    driver: local